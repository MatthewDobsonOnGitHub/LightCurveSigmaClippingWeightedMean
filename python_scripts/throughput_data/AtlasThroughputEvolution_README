Atlas Throughput Evolution Code

This is a document that summarises the workings of the AtlasThroughputEvolutionCode. 

The purpose of this code is to import data taken from the ATLAS telescopes at the two sites - Haleakala and Mauna Loa - and plot a quantifier of photon detection sensitivity (throughput) as a function of time to track the detector sensitivity over long time periods.

There are three methods of quantifying the throughput of the telescopes: 

	1. The zeropoint magnitude (defined as the magnitude of the brightness of an object that emits 1 photon per second)
	2. The 5-sigma magnitude 
	3. The 'seeing'

All these quantities are known for every given measurement made with the telescope. Three different functions are written inside the code that perform its function (extracting throughput from data file and plotting vs time), one for each throughput measure.

The code can be run for a file of throughput data for a given telescope in a .bash script, using the following code syntax:

	python AtlasThroughputEvolution filename

where 'filename' is the name of the throughput data file.

Upon running the code, the Command Line will prompt the user to enter the name of the telescope under analysis via the keyboard - the telescope name will form part of the names of the files that the code outputs. It will ask to confirm the entered name; if the user wishes to proceed, 'y' must be entered into the Command Line; if the name entered was incorrect, and the user wishes to change it, 'n' must be entered and the code will stop.

If 'y' is entered, the code will then prompt the user to select one of the three measures of throughput (see above). Once this is entered, the code will run.

The code will import the throughput (quantified as dictated by the user) of every measurement made with the telescope under analysis, along with the MJD time on which each measurement was made. These measurements are then sorted by the filter that was used to take them (orange or cyan). The throughput and time values are then plotted on a graph (throughput vs time), allowing the former's temporal evolution to be easily visualised.
